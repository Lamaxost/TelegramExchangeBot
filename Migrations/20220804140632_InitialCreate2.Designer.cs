// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TelegramExchangeDB;

#nullable disable

namespace TelegramEchangeNew.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220804140632_InitialCreate2")]
    partial class InitialCreate2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("TelegramExchangeDB.Models.Ban", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChatId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BanList");
                });

            modelBuilder.Entity("TelegramExchangeDB.Models.Received", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("UserChatId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserChatId");

                    b.ToTable("ReceivedVideos");
                });

            modelBuilder.Entity("TelegramExchangeDB.Models.Sended", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("UserChatId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserChatId");

                    b.ToTable("Sended");
                });

            modelBuilder.Entity("TelegramExchangeDB.Models.User", b =>
                {
                    b.Property<long>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AverageServerDublicatesCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExchgangingCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReceivedCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChatId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TelegramExchangeDB.Models.VideoProduct", b =>
                {
                    b.Property<string>("UniqId")
                        .HasColumnType("TEXT");

                    b.Property<long>("StorageId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StorageMessageId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserChatId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UniqId");

                    b.HasIndex("UserChatId");

                    b.ToTable("VideoProducts");
                });

            modelBuilder.Entity("TelegramExchangeDB.Models.Received", b =>
                {
                    b.HasOne("TelegramExchangeDB.Models.User", null)
                        .WithMany("VideoProductsReceived")
                        .HasForeignKey("UserChatId");
                });

            modelBuilder.Entity("TelegramExchangeDB.Models.Sended", b =>
                {
                    b.HasOne("TelegramExchangeDB.Models.User", null)
                        .WithMany("VideoProductsSended")
                        .HasForeignKey("UserChatId");
                });

            modelBuilder.Entity("TelegramExchangeDB.Models.VideoProduct", b =>
                {
                    b.HasOne("TelegramExchangeDB.Models.User", null)
                        .WithMany("VideoProducts")
                        .HasForeignKey("UserChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TelegramExchangeDB.Models.User", b =>
                {
                    b.Navigation("VideoProducts");

                    b.Navigation("VideoProductsReceived");

                    b.Navigation("VideoProductsSended");
                });
#pragma warning restore 612, 618
        }
    }
}
